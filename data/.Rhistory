c(.179, .178, -.029, .121, .0884, -.0347, .105) ^ 2
# in the order on the homework:
# .032 .032 .00084 .015 .0078 .0012 .011
f.stat <- ms.reg / ms.res
# and get the p value by using the F distribution function...
pf(f.stat, J, N - J - 1, lower.tail = F)
rsq.adj <- 1 - (1 - rsq) * (N - 1) / (N - J - 1) # .13
var.res <- ss.res / (N - J - 1) # .98
.0884 ^ 2 # .0078
b.educ <- .143 * 1.059 / 1.618
# then, calculate a t statistic by t(N - J - 1) = b / std-error(b), pulling std-error(b) from the
# output, or...
t.stat.educ <- b.educ / .038
# finally, get the (2-tailed) p value by looking up this value in the t distribution
2 * pt(t.stat.educ, N - J - 1, lower.tail = FALSE) # .014
# p < .05; opposition to affirmative action can be predicted by education at an above-chance level
## 3g.
# Same explanation as above.
b.sdo <- .115 * 1.059 / .114
# As it's not in the output, this time we need to calculate the standard error of the unstandarized
# coefficient by:
# std-error-b <- sqrt(std-error-estimate ^ 2 / (ss-SDO * (1 - coef-of-multicollinearity)))
se.estimate.sdo <- sqrt(ss.res / N) # .98
se.estimate.sdo <- sqrt(ss.res / N) # .98
# to get the ss-SDO, we square the standard deviation of SDO (to get variance)
# and then multiply by N. (We're assuming that SPSS isn't reporting the
# unbiased estimate of population standard deviation.)
ss.sdo <- (.114 ^ 2) * N
# note that (1 - coef-of-multicollinearity(sdo)) = tolerance(sdo),
# which is given
tol.sdo <- .843
# so:
se.b.sdo <- sqrt((se.estimate.sdo ^ 2) / (ss.sdo * tol.sdo)) # .49
t.stat.sdo <- b.sdo / se.b.sdo # 2.18
2 * pt(t.stat.sdo, N - J - 1, lower.tail = FALSE) # .030
# p < .05; opposition to affirmative action can be predicted by SDO at an above-chance level
## 3h.
cor.aa.ed <- .091
cor.aa.sdo <- .173
cor.ed.sdo <- -.228
# This semi-partial correlation is a measure of the relationship between affirmative action
# opposition and education, controlling for the effect of SDO on education. It is calculated by:
spcor.aa.ed <- (cor.aa.ed - cor.aa.sdo * cor.ed.sdo) / sqrt(1 - cor.ed.sdo ^ 2) # .13
# Power analysis
# (This is with no interaction - within-subjects one-way anova)
mean_yes = .5;
mean_no = .4;
sd = .35;
cor = .3;
cov = cor * (sd ^ 2);
#mean2a = .5;
#mean2b = .5;
n = 140
nTests = 1000
success = vector(mode = "logical", length = nTests)
for (i in 1:nTests) {
subjects <- mvrnorm(n, c(mean_yes, mean_no, mean_no),
matrix(c(sd ^ 2, cov, cov,
cov, sd ^ 2, cov,
cov, cov, sd ^ 2), nrow = 3))
my.df <- data.frame(subject = as.factor(rep(1:n, 3)),
condition = as.factor(rep(1:3, each = n)),
scr = as.vector(subjects))
fit <- ezANOVA(my.df, dv = scr, wid = subject, within = condition)
if (fit$ANOVA[1,5] < .05) {
success[i] = TRUE
}
}
mean(success)
install.packages("BiasedUrn")
# Preliminaries -----------------------------------------------------------
require(ggplot2)
require(dplyr)
require(lme4)
require(lmerTest)
require(lattice)
require(psych)
se <- function(x) {sd(x) / sqrt(length(x))};
dodge <- position_dodge(width=0.9)
setwd('/Users/adam/Me/Psychology/Projects/causality/git/data')
path = ''
data = read.csv(paste0(path, 'data.csv')) %>% arrange(subject) %>% filter(rating > -1) %>% mutate(rating = rating / 8)
# how many subjects are there?
numsubj = length(unique(data$subject))
numobs = nrow(data)
# Make 3D graph -----------------------------------------------------------
df.graph = data %>% group_by(focal_high, alt_high) %>% summarise(rating.mean = mean(rating), rating.se = se(rating))
mat.graph = matrix(0, nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
mat.graph[i,j] = df.graph$rating.mean[df.graph$focal_high == i & df.graph$alt_high == j]
}
}
normed = function(x,a,f) {exp(f(x,a)) / (exp(f(x,a)) + exp(f(a,x)))}
our_model = function(x,a) {ifelse(a == 1 & x == 1, 1/2, a*(1-x)/(1-x*a))}
icard = function(x,a) {1-x*(1-a)} # model from Icard et al.
hh = function(x,a) {ifelse(x > .5, 0, ifelse(x < a, 1, 1/2))} # model from Halpern & Hitchcock
sp = function(x,a) {a*(1-x)} # model from Spellman
dp = function(x,a) {a} # delta-P model (and Power-PC model)
df.cors = data.frame(x = numeric(), a = numeric(), actual = numeric(), ours = numeric(), sp = numeric(), dp = numeric(), hh = numeric(), icard = numeric(),
ours_normed = numeric(), sp_normed = numeric(), dp_normed = numeric(), hh_normed = numeric(), icard_normed = numeric())
df.modeling = matrix(0,10,10)
for (px in 1:10) {
for (pa in 1:10) {
x = px/10
a = pa/10
actual = df.graph$rating.mean[df.graph$focal_high == px & df.graph$alt_high == pa]
df.cors = rbind(df.cors, data.frame(x = px, a = pa, actual = actual,
ours = our_model(x,a), sp = sp(x,a), dp = dp(x,a), hh = hh(x,a), icard = icard(x,a),
ours_normed = normed(x,a,our_model), sp_normed = normed(x,a,sp), dp_normed = normed(x,a,dp),
hh_normed = normed(x,a,hh), icard_normed = normed(x,a,icard)))
df.modeling[px, pa] = actual
}
}
wireframe(ours ~ a * x, data = df.cors, colorkey = T, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
wireframe(sp_normed ~ a * x, data = df.cors, colorkey = F, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
ggplot(df.cors, aes(x = ours, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
ggplot(df.cors, aes(x = hh_normed, y = actual)) +
geom_point() +
geom_smooth(method = "lm") +
scale_x_continuous(breaks = c(0, 1)) +
scale_y_continuous(breaks = c(.3, .8)) +
labs(x = "Halpern & Hitchcock's predictions", y = "Actual ratings")
ggplot(df.cors, aes(x = ours, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
ggplot(df.cors, aes(x = sp, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
ggplot(df.cors, aes(x = dp, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
ggplot(df.cors, aes(x = hh, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
ggplot(df.cors, aes(x = icard, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
ggplot(df.cors, aes(x = ours_normed, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
ggplot(df.cors, aes(x = sp_normed, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
hist(data$rt / 1000)
df.rt = data %>% filter(rt < 120000) %>% mutate(rt = log(rt), certain = focal_high == 1 & alt_high == 1)
hist(df.rt$rt)
df.rt = data %>% filter(rt < 120000) %>% mutate(rt.log = log(rt), rt.sec = rt / 1000, certain = focal_high == 1 & alt_high == 1)
df.rt = data %>% filter(rt < 120000) %>% mutate(rt.log = log(rt), rt.sec = rt / 1000)
hist(df.rt$rt.sec)
df.rt = df.rt %>% filter(rt.sec < 20)
hist(df.rt$rt.sec)
data = read.csv(paste0(path, 'data.csv')) %>% arrange(subject) %>% filter(rating > -1) %>% mutate(rating = rating / 8) %>%
filter(rt < 120000 & rt > 3000)
df.graph = data %>% group_by(focal_high, alt_high) %>% summarise(rating.mean = mean(rating), rating.se = se(rating))
mat.graph = matrix(0, nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
mat.graph[i,j] = df.graph$rating.mean[df.graph$focal_high == i & df.graph$alt_high == j]
}
}
wireframe(rating.mean ~ alt_high * focal_high, data = df.graph, colorkey = T, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
df.graph = data %>% group_by(focal_high, alt_high) %>% summarise(rating.mean = mean(rating), rating.se = se(rating))
mat.graph = matrix(0, nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
mat.graph[i,j] = df.graph$rating.mean[df.graph$focal_high == i & df.graph$alt_high == j]
}
}
wireframe(rating.mean ~ alt_high * focal_high, data = df.graph, colorkey = T, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
data = read.csv(paste0(path, 'data.csv')) %>% arrange(subject) %>% filter(rating > -1) %>% mutate(rating = rating / 8)
df.graph = data %>% group_by(focal_high, alt_high) %>% summarise(rating.mean = mean(rating), rating.se = se(rating))
mat.graph = matrix(0, nrow = 10, ncol = 10)
for (i in 1:10) {
for (j in 1:10) {
mat.graph[i,j] = df.graph$rating.mean[df.graph$focal_high == i & df.graph$alt_high == j]
}
}
wireframe(rating.mean ~ alt_high * focal_high, data = df.graph, colorkey = T, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
cor.test(df.cors$actual, df.cors$sp_normed) # .8
r.test(n=100, r12 = cor(df.cors$actual, df.cors$ours, use = "complete.obs"),
r13 = cor(df.cors$actual, df.cors$sp_normed, use = "complete.obs"),
r23 = cor(df.cors$ours, df.cors$sp_normed, use = "complete.obs"))
r.test(n=100, r12 = cor(df.cors$actual, df.cors$ours_normed, use = "complete.obs"),
r13 = cor(df.cors$actual, df.cors$sp_normed, use = "complete.obs"),
r23 = cor(df.cors$ours_normed, df.cors$sp_normed, use = "complete.obs"))
df.cors$ours.logit = log(df.cors$ours / (1 - df.cors$ours))
ggplot(df.cors, aes(x = ours.logit, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
df.cors$ours.logit
df.cors
df.cors$ours
df.cors$ours.logit
df.cors$ours.logit = log(df.cors$ours_normed / (1 - df.cors$ours_normed))
ggplot(df.cors, aes(x = ours.logit, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
df.cors$ours.logit
df.cors$ours.logit = log(df.cors$ours_normed / (1 - df.cors$ours_normed))
ggplot(df.cors, aes(x = ours.logit, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
cor.test(df.cors$ours.logit, df.cors$actual)
ps = seq(0,1,.1)
ps
ps = seq(0,1,.01)
write.table(df.fitting, 'ratings.csv', row.names = F, sep = ",", col.names = F)
ps = seq(0,1,.01)
beta = .61
ws = ps ^ .61 / (ps ^ .61 + (1 - ps) ^ .61)
plot(ps,ws)
ps = seq(0,1,.01)
beta = .61
ws = ps ^ beta / ((ps ^ beta + (1 - ps) ^ beta) ^ (1 - beta))
plot(ps,ws)
abline(0,1)
ps = seq(0,1,.01)
beta = .61
ws = (ps ^ beta) / ((ps ^ beta + (1 - ps) ^ beta) ^ (1/beta))
plot(ps,ws)
abline(0,1)
w = function(ps, beta) {return (ps ^ beta) / ((ps ^ beta + (1 - ps) ^ beta) ^ (1/beta))}
ps = seq(0,1,.01)
beta = .61
w = function(ps, beta) {return (ps ^ beta) / ((ps ^ beta + (1 - ps) ^ beta) ^ (1/beta))}
plot(ps,w(ps))
abline(0,1)
ps = seq(0,1,.01)
beta = .61
w = function(ps, beta) {return (ps ^ beta) / ((ps ^ beta + (1 - ps) ^ beta) ^ (1/beta))}
plot(ps,w(ps,beta))
abline(0,1)
ps = seq(0,1,.01)
beta = .61
w = function(ps, beta) {(ps ^ beta) / ((ps ^ beta + (1 - ps) ^ beta) ^ (1/beta))}
plot(ps,w(ps,beta))
abline(0,1)
normed = function(x,a,f) {exp(f(x,a)) / (exp(f(x,a)) + exp(f(a,x)))}
our_model = function(x,a) {ifelse(a == 1 & x == 1, 1/2, a*(1-x)/(1-x*a))}
icard = function(x,a) {1-x*(1-a)} # model from Icard et al.
hh = function(x,a) {ifelse(x > .5, 0, ifelse(x < a, 1, 1/2))} # model from Halpern & Hitchcock
sp = function(x,a) {a*(1-x)} # model from Spellman
dp = function(x,a) {a} # delta-P model (and Power-PC model)
ps = seq(0,1,.01)
beta = .61
w = function(ps, beta) {(ps ^ beta) / ((ps ^ beta + (1 - ps) ^ beta) ^ (1/beta))}
plot(ps,w(ps,beta))
abline(0,1)
df.cors = data.frame(x = numeric(), a = numeric(), actual = numeric(), ours = numeric(), sp = numeric(), dp = numeric(), hh = numeric(), icard = numeric(),
ours_normed = numeric(), sp_normed = numeric(), dp_normed = numeric(), hh_normed = numeric(), icard_normed = numeric())
df.modeling = matrix(0,10,10)
for (px in 1:10) {
for (pa in 1:10) {
x = w(px/10,beta)
a = w(pa/10,beta)
actual = df.graph$rating.mean[df.graph$focal_high == px & df.graph$alt_high == pa]
df.cors = rbind(df.cors, data.frame(x = px, a = pa, actual = actual,
ours = our_model(x,a), sp = sp(x,a), dp = dp(x,a), hh = hh(x,a), icard = icard(x,a),
ours_normed = normed(x,a,our_model), sp_normed = normed(x,a,sp), dp_normed = normed(x,a,dp),
hh_normed = normed(x,a,hh), icard_normed = normed(x,a,icard)))
df.modeling[px, pa] = actual
}
}
# check correlations b/w models and ratings
cor.test(df.cors$actual, df.cors$ours) # .86
cor.test(df.cors$actual, df.cors$ours_normed) # .87
cor.test(df.cors$actual, df.cors$sp) # .72
cor.test(df.cors$actual, df.cors$sp_normed) # .8
cor.test(df.cors$actual, df.cors$dp) # .62
cor.test(df.cors$actual, df.cors$dp_normed) # .8
cor.test(df.cors$actual, df.cors$hh) # .45
cor.test(df.cors$actual, df.cors$hh_normed) # .6
cor.test(df.cors$actual, df.cors$icard) # .74
cor.test(df.cors$actual, df.cors$icard_normed) # .8
wireframe(ours ~ a * x, data = df.cors, colorkey = T, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
wireframe(ours_normed ~ a * x, data = df.cors, colorkey = F, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
ggplot(df.cors, aes(x = ours_normed, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
ggplot(df.cors, aes(x = sp_normed, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
ggplot(df.cors, aes(x = ours, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
# check correlations b/w models and ratings
cor.test(df.cors$actual, df.cors$ours) # .86
cor.test(df.cors$actual, df.cors$sp) # .72
ggplot(df.cors, aes(x = sp, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
wireframe(sp ~ a * x, data = df.cors, colorkey = F, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
wireframe(dp ~ a * x, data = df.cors, colorkey = F, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
ggplot(df.cors, aes(x = dp, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
ggplot(df.cors, aes(x = hh, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
ggplot(df.cors, aes(x = icard, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(0,1) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
wireframe(icard ~ a * x, data = df.cors, colorkey = F, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
wireframe(ours_normed ~ a * x, data = df.cors, colorkey = F, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
# check correlations b/w models and ratings
cor.test(df.cors$actual, df.cors$ours) # .86
cor.test(df.cors$actual, df.cors$sp) # .72
cor.test(df.cors$actual, df.cors$dp) # .62
cor.test(df.cors$actual, df.cors$hh) # .45
cor.test(df.cors$actual, df.cors$icard) # .74
wireframe(ours ~ a * x, data = df.cors, colorkey = T, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
wireframe(sp_normed ~ a * x, data = df.cors, colorkey = F, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
wireframe(rating.mean ~ alt_high * focal_high, data = df.graph, colorkey = T, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
wireframe(rating.mean ~ alt_high * focal_high, data = df.graph, colorkey = T, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(.2, .8))
normed = function(x,a,f) {exp(f(x,a)) / (exp(f(x,a)) + exp(f(a,x)))}
our_model = function(x,a) {ifelse(a == 1 & x == 1, 1/2, a*(1-x)/(1-x*a))}
icard = function(x,a) {1-x*(1-a)} # model from Icard et al.
hh = function(x,a) {ifelse(x > .5, 0, ifelse(x < a, 1, 1/2))} # model from Halpern & Hitchcock
sp = function(x,a) {a*(1-x)} # model from Spellman
dp = function(x,a) {a} # delta-P model (and Power-PC model)
df.cors = data.frame(x = numeric(), a = numeric(), actual = numeric(), ours = numeric(), sp = numeric(), dp = numeric(), hh = numeric(), icard = numeric(),
ours_normed = numeric(), sp_normed = numeric(), dp_normed = numeric(), hh_normed = numeric(), icard_normed = numeric())
df.modeling = matrix(0,10,10)
for (px in 1:10) {
for (pa in 1:10) {
x = px/10
a = pa/10
actual = df.graph$rating.mean[df.graph$focal_high == px & df.graph$alt_high == pa]
df.cors = rbind(df.cors, data.frame(x = px, a = pa, actual = actual,
ours = our_model(x,a), sp = sp(x,a), dp = dp(x,a), hh = hh(x,a), icard = icard(x,a),
ours_normed = normed(x,a,our_model), sp_normed = normed(x,a,sp), dp_normed = normed(x,a,dp),
hh_normed = normed(x,a,hh), icard_normed = normed(x,a,icard)))
df.modeling[px, pa] = actual
}
}
wireframe(ours_normed ~ a * x, data = df.cors, colorkey = F, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
ggplot(df.cors, aes(x = ours_normed, y = actual)) +
geom_point(size = 3) +
geom_smooth(method = "lm") +
xlim(0,1) +
ylim(.2,.8) +
labs(x = "", y = "") +
theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.border = element_rect(color = 'black', fill = NA, size = 3))
wireframe(ours_normed ~ a * x, data = df.cors, colorkey = F, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(0, 1))
wireframe(ours_normed ~ a * x, data = df.cors, colorkey = F, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(.2, .8))
wireframe(sp_normed ~ a * x, data = df.cors, colorkey = F, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(.2, .8))
wireframe(sp_normed ~ a * x, data = df.cors, colorkey = F, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3))
wireframe(sp_normed ~ a * x, data = df.cors, colorkey = F, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(.2, .8))
wireframe(ours_normed ~ a * x, data = df.cors, colorkey = F, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(.2, .8))
wireframe(rating.mean ~ alt_high * focal_high, data = df.graph, colorkey = T, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(.2, .8))
wireframe(rating.mean ~ alt_high * focal_high, data = df.graph, colorkey = F, drape = TRUE,  screen=list(z=120, x=-70, y=0),
xlab = list(""), ylab = list(""), zlab = list(""), par.settings = list(axis.line = list(col = NA)),
scales = list(col = 1, relation = 'free', lwd = 3), zlim = c(.2, .8))
